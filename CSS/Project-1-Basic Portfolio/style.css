:root {
    --teal: #031634;
    --cobalt: #033649;
    --turquoise: #066464;
    --biege: #CEB280;
    --gold: #EADDCC;
}
html {
    box-sizing: border-box;
}

*, *:after, *:before {
    box-sizing: inherit;
}

body {
    /* Browser has some margin and padding by default so we need to reset it. */
    margin: 0;
    padding: 0;
    color: white;
    background-color: var(--teal);
}

.section-turquoise {
    background-color: var(--turquoise);
}

h1, h2, h3, h4, h5, h6 {
    margin: 0;
}

#intro {
    padding: 4rem 1rem 5rem 1rem; /* TRBL */
    max-width: 1200px;
    margin: 0 auto;
}

#intro p{
    font-size: 1.5rem;
    line-height: 1.5;
}

.name span{
    display: block;
    color: var(--gold);
    font-size: 4rem;
}

.profile {
    padding-bottom: 1rem;
}

#intro h2 {
    font-size: 3rem;
    font-weight: normal;
}

#experience ul {
    padding: 0;
    font-size: 1.2rem;
    
}

#experience li {
    list-style-type: none;
    padding: 1rem;
}

#experience a {
    color: white;
}

#hire {
    background-color: var(--turquoise);
    width: 400px;
    text-align: center;
    margin: 0 auto;
    padding: 3rem 0;
}

#hire p:last-child {
    margin-top: 3rem;
}

nav {
    font-size: 80%;
    padding: 1rem;
    background-color: var(--cobalt);
}

nav ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    gap: 2rem;
    margin-right: 2rem;
}

nav a {
    color: white;
    font-size: 1.2rem;
    text-decoration: none;
}

nav a:hover {
    color: var(--biege);
    text-decoration: underline;
}

nav li:first-child {
    /* flex-grow: 1; we will write media query to bring this functionality back */
    flex-basis: 100%;
    font-size: 1.5rem;
    margin-left: 3rem;
}

.resume-button {
    background-color: orangered;
    padding: 0.5rem;
    border-radius: 5px;
}

.resume-button:hover {
    color: white;
    background: linear-gradient(145deg, rgba(247,106,82,1) 26%, rgba(222,120,66,1) 36%, rgba(240,86,71,1) 47%);
}

@media (min-width: 600px) {
    nav li:first-child {
        flex-grow: 1;
        flex-basis: auto;
    }
}

.gradient-section {
    height: 2px;
    background-color: #0093E9;
    background-image: linear-gradient(160deg, #0093E9 0%, #80D0C7 100%);
}

.my-picture {
    max-height: 400px;
    max-width: 300px;
}

.my-picture img {
    width: 100%;
    border-radius: 5px;
    margin: 2rem 0;
}

footer {
    text-align: center;
    padding: 2rem 0;
}

#experience {
    display: flex;
    justify-content: space-around;
    align-items: center;
}

#experience ul {
    max-width: 400px;
    margin: 0 4rem;
    border: solid white 2px;
    border-radius: 5px;
    background-color: var(--turquoise);
    padding: 1rem;
}

#experience-header {
    font-size: 3rem;
     margin: 0 auto;
     width: 200px;
     padding: 1rem;
}
/* margin 1em ==> em == size according to parent 
margin 1rem ==> rem == size according to HTML
margin 1px ==> px == It won't scale accordingly */

/* If we add margin in 2 elements vertically then it won't add (10px + 10px vert margin) ==> 10px
(20px + 10px vert margin) ==> 20px --> It will always take large value  */
